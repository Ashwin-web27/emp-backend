{
  "openapi": "3.0.0",
  "info": {
    "title": "Node.js MVC Auth API",
    "version": "1.0.0",
    "description": "API documentation for Node.js MVC Authentication System"
  },
  "servers": [
    {
      "url": "http://localhost:5000/api/v1",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Users",
      "description": "User management endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullName": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456"
                  },
                  "confirmPassword": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": ["fullName", "email", "password", "confirmPassword"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "5f8d0f4d7f4f7a1d1c9f3f5d"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (validation errors)"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "123456"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "5f8d0f4d7f4f7a1d1c9f3f5d"
                        },
                        "fullName": {
                          "type": "string",
                          "example": "John Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "john@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current logged in user",
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    },
    "/users": {
  "get": {
    "tags": ["Users"],
    "summary": "Get all users (Employee Only)",
    "security": [{
      "bearerAuth": []
    }],
    "responses": {
      "200": {
        "description": "List of users",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "401": {
        "description": "Not authorized"
      }
    }
  },
  "post": {
    "tags": ["Users"],
    "summary": "Create a new user (Employee Only)",
    "security": [{
      "bearerAuth": []
    }],
    "requestBody": {
      "required": true,
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/UserInput"
          }
        }
      }
    },
    "responses": {
      "201": {
        "description": "User created successfully",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "400": {
        "description": "Validation error"
      },
      "401": {
        "description": "Not authorized"
      }
    }
  }
},
"/users/{id}": {
  "get": {
    "tags": ["Users"],
    "summary": "Get single user (Employee Only)",
    "security": [{
      "bearerAuth": []
    }],
    "parameters": [{
      "name": "id",
      "in": "path",
      "required": true,
      "schema": {
        "type": "string"
      }
    }],
    "responses": {
      "200": {
        "description": "User details",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "401": {
        "description": "Not authorized"
      },
      "404": {
        "description": "User not found"
      }
    }
  }
},
    "/employee": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "security": [{
          "bearerAuth": []
        }],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorized"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
"User": {
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "example": "5f8d0f4d7f4f7a1d1c9f3f5d"
    },
    "firstName": {
      "type": "string",
      "example": "John"
    },
    "lastName": {
      "type": "string",
      "example": "Doe"
    },
    "email": {
      "type": "string",
      "example": "john@example.com"
    },
    "phoneNumber": {
      "type": "string",
      "example": "+1 (555) 123-4567"
    },
    "age": {
      "type": "integer",
      "example": 30
    },
    "city": {
      "type": "string",
      "example": "New York"
    },
    "createdAt": {
      "type": "string",
      "format": "date-time"
    }
  }
},
"UserInput": {
  "type": "object",
  "properties": {
    "firstName": {
      "type": "string",
      "example": "John"
    },
    "lastName": {
      "type": "string",
      "example": "Doe"
    },
    "email": {
      "type": "string",
      "example": "john@example.com"
    },
    "phoneNumber": {
      "type": "string",
      "example": "+1 (555) 123-4567"
    },
    "age": {
      "type": "integer",
      "example": 30
    },
    "city": {
      "type": "string",
      "example": "New York"
    },
    "password": {
      "type": "string",
      "example": "123456"
    }
  },
  "required": [
    "firstName",
    "lastName",
    "email",
    "phoneNumber",
    "age",
    "city",
    "password"
  ]
},
        
      "Employee": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "5f8d0f4d7f4f7a1d1c9f3f5d"
          },
          "fullName": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}